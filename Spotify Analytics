/*  For this project, I downloaded Spotify data from Kaggle. 
    Then I created a table to insert the Spotify data into.
    Finally, I performed analytics on the data using SQl. */
 

/* Creating the table. */    
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

/* Then I inserted the Spotify Data .csv into the table. */ 

/* Next, I explored the data using the following SQL. */ 

SELECT * FROM BIT_DB.Spotifydata;

/* 1. I determined the danceability of the TOP 10 most popular songs. */ 
SELECT track_name, artist_name, popularity, danceability
FROM BIT_DB.Spotifydata
GROUP BY track_name, artist_name
ORDER BY popularity DESC
LIMIT 10;

/* 2. I determined which songs are a good fit to listen to for the following weather: rainy day, cloudy day, and sunny day. */
SELECT artist_name, track_name, tempo,
CASE
WHEN tempo < 108 THEN 'Rainy Day'
WHEN tempo < 144 THEN 'Cloudy Day'
ELSE 'Sunny Day'
END AS weather
FROM BIT_DB.Spotifydata
ORDER BY tempo ASC;

/* 3. I listed all the songs and artist names where the popularity is between 90 to 92 and the acousticness is between 0.5 to 0.8. */
SELECT track_name, artist_name, popularity, acousticness
FROM BIT_DB.Spotifydata
WHERE popularity BETWEEN 90 AND 92
AND acousticness BETWEEN 0.5 AND 0.8;

/* 4. I determined the average loudness, speechiness, liveness of Olivia Rodrigo's songs. */
SELECT artist_name, AVG(loudness), AVG(speechiness), AVG(liveness)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Olivia Rodrigo';

/* 5. I determined all the artists that recieved at least 90 in popularity and the times that they achieved it. */
SELECT artist_name, COUNT(artist_name)
FROM BIT_DB.Spotifydata
WHERE popularity >= 90
GROUP BY artist_name
ORDER BY count(popularity) DESC;

/* 6. I determined the average duration of Doja Cat's songs and converted it to minutes from milliseconds. */
SELECT artist_name, AVG(duration_ms/60000.00) AS avg_duration_min 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING artist_name = 'Doja Cat';

/* 7. I calculated the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, 
I showed their name, their average popularity, and labeled them as a “Top Star”. */

WITH popularity_average_CTE AS (
    SELECT s.artist_name, AVG(s.popularity) AS avg_popularity
    FROM Spotifydata AS s
    GROUP BY s.artist_name
)
SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM popularity_average_CTE
WHERE avg_popularity >= 90;
